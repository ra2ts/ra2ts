import { expect, test } from 'vitest';
import lzo from '@/Resources/lzo1x';

test('can compress and decompress', () => {
  const input = [0x4C, 0x6F, 0x72, 0x65, 0x6D, 0x20, 0x69, 0x70, 0x73, 0x75, 0x6D, 0x20, 0x64, 0x6F, 0x6C, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x74, 0x20, 0x61, 0x6D, 0x65, 0x74, 0x2C, 0x20, 0x63, 0x6F, 0x6E, 0x73, 0x65, 0x63, 0x74, 0x65, 0x74, 0x75, 0x72, 0x20, 0x61, 0x64, 0x69, 0x70, 0x69, 0x73, 0x63, 0x69, 0x6E, 0x67, 0x20, 0x65, 0x6C, 0x69, 0x74, 0x2C, 0x20, 0x73, 0x65, 0x64, 0x20, 0x64, 0x6F, 0x20, 0x65, 0x69, 0x75, 0x73, 0x6D, 0x6F, 0x64, 0x20, 0x74, 0x65, 0x6D, 0x70, 0x6F, 0x72, 0x20, 0x69, 0x6E, 0x63, 0x69, 0x64, 0x69, 0x64, 0x75, 0x6E, 0x74, 0x20, 0x75, 0x74, 0x20, 0x6C, 0x61, 0x62, 0x6F, 0x72, 0x65, 0x20, 0x65, 0x74, 0x20, 0x64, 0x6F, 0x6C, 0x6F, 0x72, 0x65, 0x20, 0x6D, 0x61, 0x67, 0x6E, 0x61, 0x20, 0x61, 0x6C, 0x69, 0x71, 0x75, 0x61, 0x2E, 0x20, 0x55, 0x74, 0x20, 0x65, 0x6E, 0x69, 0x6D, 0x20, 0x61, 0x64, 0x20, 0x6D, 0x69, 0x6E, 0x69, 0x6D, 0x20, 0x76, 0x65, 0x6E, 0x69, 0x61, 0x6D, 0x2C, 0x20, 0x71, 0x75, 0x69, 0x73, 0x20, 0x6E, 0x6F, 0x73, 0x74, 0x72, 0x75, 0x64, 0x20, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x75, 0x6C, 0x6C, 0x61, 0x6D, 0x63, 0x6F, 0x20, 0x6C, 0x61, 0x62, 0x6F, 0x72, 0x69, 0x73, 0x20, 0x6E, 0x69, 0x73, 0x69, 0x20, 0x75, 0x74, 0x20, 0x61, 0x6C, 0x69, 0x71, 0x75, 0x69, 0x70, 0x20, 0x65, 0x78, 0x20, 0x65, 0x61, 0x20, 0x63, 0x6F, 0x6D, 0x6D, 0x6F, 0x64, 0x6F, 0x20, 0x63, 0x6F, 0x6E, 0x73, 0x65, 0x71, 0x75, 0x61, 0x74, 0x2E, 0x20, 0x44, 0x75, 0x69, 0x73, 0x20, 0x61, 0x75, 0x74, 0x65, 0x20, 0x69, 0x72, 0x75, 0x72, 0x65, 0x20, 0x64, 0x6F, 0x6C, 0x6F, 0x72, 0x20, 0x69, 0x6E, 0x20, 0x72, 0x65, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6E, 0x64, 0x65, 0x72, 0x69, 0x74, 0x20, 0x69, 0x6E, 0x20, 0x76, 0x6F, 0x6C, 0x75, 0x70, 0x74, 0x61, 0x74, 0x65, 0x20, 0x76, 0x65, 0x6C, 0x69, 0x74, 0x20, 0x65, 0x73, 0x73, 0x65, 0x20, 0x63, 0x69, 0x6C, 0x6C, 0x75, 0x6D, 0x20, 0x64, 0x6F, 0x6C, 0x6F, 0x72, 0x65, 0x20, 0x65, 0x75, 0x20, 0x66, 0x75, 0x67, 0x69, 0x61, 0x74, 0x20, 0x6E, 0x75, 0x6C, 0x6C, 0x61, 0x20, 0x70, 0x61, 0x72, 0x69, 0x61, 0x74, 0x75, 0x72, 0x2E, 0x20, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x65, 0x75, 0x72, 0x20, 0x73, 0x69, 0x6E, 0x74, 0x20, 0x6F, 0x63, 0x63, 0x61, 0x65, 0x63, 0x61, 0x74, 0x20, 0x63, 0x75, 0x70, 0x69, 0x64, 0x61, 0x74, 0x61, 0x74, 0x20, 0x6E, 0x6F, 0x6E, 0x20, 0x70, 0x72, 0x6F, 0x69, 0x64, 0x65, 0x6E, 0x74, 0x2C, 0x20, 0x73, 0x75, 0x6E, 0x74, 0x20, 0x69, 0x6E, 0x20, 0x63, 0x75, 0x6C, 0x70, 0x61, 0x20, 0x71, 0x75, 0x69, 0x20, 0x6F, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x20, 0x64, 0x65, 0x73, 0x65, 0x72, 0x75, 0x6E, 0x74, 0x20, 0x6D, 0x6F, 0x6C, 0x6C, 0x69, 0x74, 0x20, 0x61, 0x6E, 0x69, 0x6D, 0x20, 0x69, 0x64, 0x20, 0x65, 0x73, 0x74, 0x20, 0x6C, 0x61, 0x62, 0x6F, 0x72, 0x75, 0x6D, 0x2E];
  const inputBuffer = Uint8Array.from(input);
  const state: { inputBuffer: Uint8Array, outputBuffer: Uint8Array | null } = { inputBuffer, outputBuffer: null };
  
  lzo.compress(state);

  if (state.outputBuffer === null) {
    throw new Error('Could not compress LZO input');
  }

  state.inputBuffer = state.outputBuffer;
  state.outputBuffer = null;

  lzo.decompress(state);

  if (state.outputBuffer === null) {
    throw new Error('Could not decompress LZO input');
  }

  expect(Array.from(state.outputBuffer)).toStrictEqual(input);
});