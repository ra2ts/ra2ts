import { expect, test } from 'vitest';
import { Palette } from '@/Resources/Palette';

const testPalette = new Uint8Array([0x3f, 0x0, 0x3f, 0x3c, 0x3f, 0x3f, 0x3e, 0x3c, 0x3f, 0x36, 0x3f, 0x3f, 0x30, 0x3f, 0x3f, 0x3c, 0x39, 0x3f, 0x2c, 0x3f, 0x3f, 0x29, 0x3f, 0x3f, 0x37, 0x38, 0x3f, 0x39, 0x37, 0x3c, 0x27, 0x3f, 0x3f, 0x25, 0x3f, 0x3f, 0x23, 0x3f, 0x3f, 0x20, 0x3f, 0x3f, 0x29, 0x3b, 0x3f, 0x23, 0x3d, 0x3f, 0x20, 0x3d, 0x3f, 0x34, 0x34, 0x39, 0x23, 0x3b, 0x3f, 0x21, 0x3b, 0x3f, 0x1c, 0x3d, 0x3f, 0x1e, 0x3b, 0x3f, 0x21, 0x39, 0x3f, 0x33, 0x31, 0x37, 0x1e, 0x39, 0x3f, 0x1c, 0x39, 0x3f, 0x17, 0x3c, 0x3f, 0x1f, 0x36, 0x3f, 0x2a, 0x32, 0x39, 0x31, 0x2f, 0x35, 0x1c, 0x37, 0x3f, 0x31, 0x2e, 0x33, 0x1e, 0x36, 0x3b, 0x2f, 0x2f, 0x36, 0x1a, 0x37, 0x3f, 0x2f, 0x2f, 0x33, 0x1f, 0x33, 0x3f, 0x1a, 0x35, 0x3f, 0x2f, 0x2d, 0x31, 0x2f, 0x2d, 0x33, 0x13, 0x39, 0x3f, 0x1c, 0x33, 0x3f, 0x2d, 0x2d, 0x32, 0x1a, 0x33, 0x3f, 0x30, 0x2b, 0x31, 0x18, 0x34, 0x3f, 0x1c, 0x31, 0x3f, 0x2b, 0x2b, 0x39, 0x2d, 0x2b, 0x31, 0x2d, 0x2b, 0x2f, 0x1a, 0x31, 0x3f, 0x1f, 0x2f, 0x3f, 0x2b, 0x2b, 0x31, 0x2b, 0x2b, 0x2f, 0x1c, 0x2f, 0x3f, 0x18, 0x31, 0x3f, 0x2d, 0x29, 0x2f, 0x1b, 0x30, 0x3d, 0x1e, 0x2f, 0x35, 0x14, 0x32, 0x3f, 0x1a, 0x2f, 0x3f, 0x2b, 0x29, 0x2f, 0x1c, 0x2d, 0x3f, 0x12, 0x32, 0x3f, 0x2b, 0x28, 0x2c, 0x1a, 0x2d, 0x3f, 0x27, 0x29, 0x32, 0x17, 0x2e, 0x3f, 0x10, 0x32, 0x3f, 0x11, 0x32, 0x39, 0x29, 0x28, 0x2d, 0x1c, 0x2b, 0x3f, 0x13, 0x2f, 0x3f, 0x29, 0x27, 0x2b, 0x10, 0x2f, 0x3f, 0x13, 0x2d, 0x3f, 0x1b, 0x29, 0x3f, 0x25, 0x27, 0x2b, 0x22, 0x27, 0x2d, 0x15, 0x2a, 0x3f, 0x10, 0x2d, 0x3f, 0x27, 0x25, 0x29, 0xd, 0x2e, 0x3f, 0x12, 0x2c, 0x3a, 0x1c, 0x27, 0x35, 0x24, 0x24, 0x2b, 0x23, 0x25, 0x29, 0x10, 0x2a, 0x3f, 0x26, 0x24, 0x25, 0x25, 0x23, 0x27, 0xe, 0x2a, 0x3f, 0xc, 0x29, 0x3f, 0x23, 0x22, 0x27, 0xf, 0x28, 0x3c, 0x20, 0x23, 0x27, 0x25, 0x21, 0x25, 0xe, 0x27, 0x3f, 0x11, 0x27, 0x33, 0x11, 0x25, 0x3f, 0x23, 0x21, 0x25, 0x24, 0x20, 0x22, 0xc, 0x27, 0x3f, 0x20, 0x21, 0x22, 0x1e, 0x20, 0x25, 0xc, 0x25, 0x3f, 0xe, 0x23, 0x3f, 0xa, 0x25, 0x3f, 0x21, 0x1e, 0x23, 0x21, 0x1e, 0x20, 0xc, 0x23, 0x3b, 0xc, 0x22, 0x3f, 0x12, 0x22, 0x2c, 0xa, 0x23, 0x3f, 0xf, 0x22, 0x34, 0x1d, 0x1e, 0x21, 0x21, 0x1c, 0x21, 0x1e, 0x1c, 0x23, 0x1e, 0x1c, 0x21, 0xa, 0x21, 0x3f, 0x1f, 0x1c, 0x1e, 0x8, 0x21, 0x3f, 0x1c, 0x1c, 0x1e, 0x1e, 0x1a, 0x21, 0xd, 0x1d, 0x3f, 0x1a, 0x1c, 0x21, 0x7, 0x21, 0x3a, 0xa, 0x1e, 0x3f, 0x1d, 0x1b, 0x1c, 0x1c, 0x1a, 0x1e, 0x8, 0x1e, 0x3f, 0x1a, 0x1a, 0x1e, 0xc, 0x1d, 0x32, 0x10, 0x19, 0x3f, 0x7, 0x1e, 0x3a, 0x8, 0x1c, 0x3f, 0x10, 0x1d, 0x27, 0x1b, 0x19, 0x1a, 0x1a, 0x19, 0x1c, 0xc, 0x19, 0x3f, 0x5, 0x1c, 0x3f, 0xa, 0x1a, 0x3f, 0x1a, 0x19, 0x18, 0x8, 0x1a, 0x3f, 0x4, 0x1d, 0x39, 0x18, 0x17, 0x1a, 0x8, 0x18, 0x3f, 0x19, 0x16, 0x18, 0x9, 0x18, 0x36, 0x6, 0x18, 0x3f, 0xc, 0x19, 0x29, 0x1, 0x1a, 0x3c, 0x8, 0x16, 0x3f, 0x2, 0x1a, 0x39, 0x19, 0x15, 0x15, 0x16, 0x16, 0x16, 0x6, 0x18, 0x38, 0x1, 0x1a, 0x37, 0x12, 0x17, 0x1d, 0x16, 0x15, 0x18, 0x0, 0x1a, 0x39, 0xc, 0x12, 0x3f, 0xa, 0x13, 0x3f, 0x16, 0x14, 0x16, 0x16, 0x14, 0x14, 0x14, 0x14, 0x16, 0x6, 0x13, 0x3f, 0x14, 0x14, 0x14, 0x0, 0x17, 0x39, 0x11, 0x15, 0x17, 0x16, 0x12, 0x14, 0xa, 0x10, 0x3f, 0x14, 0x12, 0x16, 0x14, 0x12, 0x14, 0xa, 0x10, 0x38, 0xd, 0xd, 0x3f, 0x12, 0x12, 0x14, 0x12, 0x12, 0x12, 0x15, 0x11, 0x12, 0x14, 0x10, 0x14, 0xa, 0xd, 0x3f, 0x5, 0x12, 0x35, 0x5, 0xe, 0x3f, 0x12, 0x10, 0x12, 0x10, 0x10, 0x13, 0x11, 0x10, 0x10, 0x8, 0x10, 0x2a, 0xe, 0x8, 0x3f, 0xc, 0x9, 0x3f, 0x13, 0xe, 0x10, 0x10, 0xe, 0x10, 0x9, 0xf, 0x1d, 0x10, 0xe, 0xe, 0x11, 0xc, 0xe, 0x9, 0x7, 0x3f, 0x10, 0xc, 0x10, 0xa, 0xe, 0x15, 0x3, 0xd, 0x2e, 0xd, 0x4, 0x3f, 0x2, 0xd, 0x2b, 0xe, 0xc, 0xe, 0xf, 0xb, 0xc, 0xc, 0xc, 0xe, 0xc, 0xc, 0xc, 0xf, 0xb, 0x9, 0x3, 0x5, 0x3f, 0x1, 0xa, 0x2a, 0xc, 0xa, 0xc, 0xc, 0xa, 0xa, 0x8, 0x2, 0x3f, 0x9, 0xa, 0xd, 0xb, 0xa, 0x6, 0xa, 0xa, 0xa, 0x2, 0x7, 0x29, 0x2, 0x6, 0x31, 0x0, 0x8, 0x29, 0xa, 0x8, 0xa, 0xb, 0x7, 0x8, 0x8, 0x7, 0xe, 0x5, 0x0, 0x3f, 0x8, 0x8, 0x8, 0x0, 0x6, 0x29, 0xa, 0x6, 0x5, 0x0, 0x4, 0x27, 0x8, 0x6, 0x8, 0x6, 0x6, 0x6, 0x4, 0x6, 0x9, 0x6, 0x6, 0x4, 0x3, 0x4, 0x12, 0x2, 0x2, 0x1a, 0x2, 0x4, 0xd, 0x7, 0x3, 0x4, 0x4, 0x4, 0x6, 0x4, 0x4, 0x4, 0x4, 0x4, 0x2, 0x2, 0x3, 0x9, 0x1, 0x4, 0x5, 0x4, 0x2, 0x2, 0x2, 0x2, 0x4, 0x2, 0x2, 0x2, 0x0, 0x2, 0x4, 0x0, 0x8, 0x0, 0x0, 0x14, 0x0, 0x0, 0x2c, 0x0, 0x0, 0x3f, 0x0, 0x2d, 0x3f, 0x29, 0x15, 0x13, 0x0, 0x28, 0x23, 0x0, 0x3f, 0x3a, 0x0, 0x3f, 0x3b, 0x2b, 0xa, 0x0, 0x0, 0x19, 0x0, 0x0, 0x2e, 0x0, 0x0, 0x3f, 0x0, 0x0, 0x3f, 0x20, 0x20, 0x0, 0x0, 0x0, 0x3f, 0x3f, 0x3f]);

test('can parse palette arrays', () => {
  const palette = Palette.fromArray(testPalette);
  expect(palette.getColorAt(0)).toStrictEqual({ r: 247, g: 0, b: 247 });
  expect(palette.getColorAt(255)).toStrictEqual({ r: 247, g: 251, b: 247 });
});